@use "../variables/colours";

button.button,
a.button {
  background-color: colours.$primary-colour;
  color: colours.$inverse-colour !important;
  font-weight: 400;
  padding: 0.4rem 1rem;
  border-radius: 0.5rem;
  text-align: center;
  cursor: pointer;
  text-decoration-skip-ink: inherit;
  text-decoration: none;
  transition:
    1s ease color,
    1s ease filter;
  white-space: nowrap;
  border-width: 0;

  &.outline {
    border: 1px solid colours.$neutral-colour;
    outline-style: none;
  }

  i {
    margin-left: 0.5rem;
    font-weight: 400;
  }

  // cycle through background colours
  @each $key, $value in colours.$colours {
    &.#{$key} {
      background-color: $value;

      @if ($key == "neutral") {
        // todo: only in dark mode, reverse in light mode
        color: colours.$inverse-colour !important;
      }
    }
  }

  &:hover,
  &:focus,
  &:active {
    color: colours.$neutral-colour;
  }

  &:hover {
    filter: contrast(150%);
  }

  &:focus,
  &:active {
    filter: brightness(150%);
  }

  &:disabled {
    background-color: colours.$semi-transparent-colour;
    cursor: not-allowed;
  }

  &.selected {
    transform: translateY(1px);
    box-shadow:
      inset 0 2px 1px 1px rgba(0, 0, 0, 0.2),
      inset 0 -1px 1px rgba(255, 255, 255, 0.5);
    filter: brightness(110%);
  }
}

.inverted button.button.transparent,
.inverted a.button.transparent {
  color: colours.$inverse-colour !important;
}
